name: Release

on:
  push:
    tags:
      # This syntax is globs, not regex, so it's matching any tag that
      # contains the prefix "mosh-" and the 3 version elements.
      - "mosh-*.*.*"

jobs:
  release:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: "ensure version bumped"
      run: |
        expected_tag=$(echo ${{ github.ref }} | cut -d'/' -f3)
        have_tag="mosh-$(sed -n 's/AC_INIT(\[[^]]*\], \[\([^]]*\)\].*/\1/p' <configure.ac)"
        echo "Expected tag <$expected_tag>, got <$have_tag>"
        if [[ "$expected_tag" != "$have_tag" ]]; then exit 1; fi

    - name: "setup linux build environment"
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: sudo apt install -y protobuf-compiler libprotobuf-dev libutempter-dev autoconf automake nettle-dev

    - name: "generate build scripts"
      run: PATH=/opt/local/bin:$PATH ./autogen.sh

    - name: "configure"
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: ./configure --enable-static-libraries --enable-compile-warnings=error --enable-examples

    - name: "build"
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: make V=1

    - name: "test"
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: make V=1 distcheck -j

    - name: "unshallow git repository for git describe"
      if: ${{ startsWith(matrix.os, 'macos') }}
      run: git fetch --tags --unshallow -f

    - name: "Package"
      run: tar -zcvf mosh.tar.gz src/frontend/mosh-server src/frontend/mosh-client

    - uses: actions/upload-artifact@v3
      with:
        name: mosh
        path: |
          mosh.tar.gz
        retention-days: 1
